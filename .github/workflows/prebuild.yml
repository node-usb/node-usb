name: prebuild

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  prebuild:
    strategy:
      matrix:
        include:
          - name: darwin
            os: macos-14
            node: x64
            command: prebuild --arch x64+arm64
          - name: win32-x86
            os: windows-2022
            node: x86
            command: prebuild
          - name: win32-x64
            os: windows-2022
            node: x64
            command: prebuild
          - name: win32-arm64
            os: windows-2022
            command: prebuild --arch arm64 --target 20.11.1
          - name: linux-x64
            os: ubuntu-22.04
            command: prebuild-cross --tag-libc -i ghcr.io/node-usb/centos7-devtoolset7 -i ghcr.io/node-usb/alpine
          - name: linux-arm
            os: ubuntu-22.04
            command: prebuild-cross --tag-armv -i ghcr.io/node-usb/linux-arm64 -i ghcr.io/node-usb/linux-armv7 -i ghcr.io/node-usb/linux-armv6
          - name: android-arm
            os: ubuntu-22.04
            command: prebuild-cross --tag-armv -i ghcr.io/node-usb/android-arm64 -i ghcr.io/node-usb/android-armv7
          - name: linux-x86
            os: ubuntu-22.04
            command: prebuild-cross -i ghcr.io/node-usb/linux-x86
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.os == 'macos-14'
        run: sudo -H pip install setuptools
      - if: matrix.node
        uses: actions/setup-node@v6
        with:
          node-version: 20.x
          architecture: ${{ matrix.node }}
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - run: yarn install --ignore-scripts
      - run: yarn ${{ matrix.command }}
      - run: tar -zcvf ${{ matrix.name }}.tar.gz -C prebuilds .
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}.tar.gz
          retention-days: 1
  release:
    needs: prebuild
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          path: artifacts
      - uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/*/*.tar.gz
